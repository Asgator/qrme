{"version":3,"sources":["pages/main/index.js","pages/create/text/index.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","search","useLocation","params","queryString","parse","decodeURI","console","log","goto","url","split","react_default","a","createElement","react_router","to","type","value","nextGoTo","concat","stringify","Object","objectSpread","view","className","QRious","window","location","origin","size","Math","min","innerWidth","react_router_dom","CreateTextPage","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","useEffect","el","document","getElementById","focus","id","cx","edit","onInput","e","currentTarget","innerText","onBlur","contentEditable","dangerouslySetInnerHTML","__html","Redirect","App","path","element","main_MainPage","text_CreateTextPage","App_Redirect","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9a7c3b39.chunk.js","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport { QRious } from 'react-qrious';\nimport './style.css';\nimport { Link, Navigate, useLocation } from 'react-router-dom';\n\nexport const MainPage = () => {\n    const { search } = useLocation();\n    const params = queryString.parse(decodeURI(search));\n    console.log('EEEEBOOOOYYY');\n\n\n    if (params.goto) {\n        const url = decodeURI(search).split('goto=');\n        return <Navigate to={url[1]} />;\n    }\n\n    if (!params.type || !params.value) {\n        return <Navigate to=\"/qrme/create/text?type=text\" />;\n    }\n\n    const nextGoTo = `/qrme/create/text?${queryString.stringify({\n        ...params,\n        view: 1,\n        goto: '',\n    })}`;\n\n    return (\n        <div className=\"main-page\">\n            <div className=\"wrapper\">\n                <QRious\n                    value={`${window.location.origin}/qrme?goto=${nextGoTo}`}\n                    size={Math.min(320, window.innerWidth - 60)}\n                />\n            </div>\n            <Link className=\"edit-link\" to={`/qrme/create/${params.type}${search}`}>Редактировать</Link>\n        </div>\n    );\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { Link, useLocation } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport './style.css';\n\nexport const CreateTextPage = () => {\n    const { search } = useLocation();\n    const params = queryString.parse(search);\n    const [value, setValue] = React.useState(params.value || '');\n\n    console.log('stringParams', search);\n\n    React.useEffect(() => {\n        const el = document.getElementById('textarea');\n\n        if (el) {\n            el.focus();\n        }\n    })\n\n    return (\n        <div className=\"text-view-page\">\n            <div className=\"wrapper\">\n                <div\n                    id=\"textarea\"\n                    className={cx('textarea', { edit: !params.view })}\n                    onInput={(e) => {\n                        setValue(e.currentTarget.innerText);\n                    }}\n                    onBlur={(e) => {\n                        setValue(e.currentTarget.innerText);\n                    }}\n                    contentEditable={!params.view}\n                    dangerouslySetInnerHTML={{ __html: params.value }}\n                />\n            </div>\n            {params.view ? (\n                <Link className=\"edit-link\" to={`/qrme/create/${params.type}?${queryString.stringify({\n                    ...params,\n                    view: '',\n                    goto: '',\n                })}`}>Редактировать</Link>\n            ) : (\n                <Link className=\"edit-link create\" to={`/qrme/?${\n                    queryString.stringify({\n                        ...params,\n                        value,\n                        view: '',\n                        goto: '',\n                    })\n                }`}>Создать QRcode</Link>\n            )}\n        </div>\n    );\n}\n","import './App.css';\nimport React from 'react';\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { MainPage } from './pages/main';\nimport { CreateTextPage } from './pages/create/text';\n\nconst Redirect = () => {\n    return <Navigate to=\"/qrme\" />;\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/qrme\" element={<MainPage />} />\n      <Route path=\"/qrme/create/text\" element={<CreateTextPage />} />\n      <Route path=\"/\" element={<Redirect />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}